{"version":3,"sources":["utils/helper.js","components/IssueDetails.js","components/Labels.js","components/Issues.js","App.js","reportWebVitals.js","index.js"],"names":["IssueDetails","data","createdAt","timestamp","MINUTE","SECOND","HOUR","DAY","MONTH","YEAR","timeelapsed","Date","now","getElapsedString","value","unit","round","Math","helper","created_at","user","login","timeStamp","number","Fragment","Labels","labelMap","labels","map","label","index","style","backgroundColor","color","className","name","headers","Authorization","Accept","Issues","props","state","repo","listFilter","choice","since","toISOString","per_page","sort","page","currentPageNumber","pages","issues","loading","error","showBody","getIssues","bind","this","params","keys","Object","length","key","encodeURIComponent","join","linkHeaders","userRepositoryIssues","fullUrl","fetch","then","response","get","header","Error","split","reduce","links","part","section","url","replace","trim","ok","json","setState","catch","ProgressBar","animated","message","renderError","Container","data-id","id","Row","Col","md","title","renderLoading","renderIssues","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1910c17f.chunk.js","sourcesContent":["\nexport const encodeQueryString = (params) => {\n    const keys = Object.keys(params)\n    return keys.length\n        ? \"?\" + keys\n            .map(key => encodeURIComponent(key)\n                + \"=\" + encodeURIComponent(params[key]))\n            .join(\"&\")\n        : \"\"\n}\n\nexport function parseLinkHeader(header) {\n    if (header.length === 0) {\n        throw new Error(\"input must not be of zero length\");\n    }\n\n    // Split parts by comma and parse each part into a named link\n    return header.split(/(?!\\B\"[^\"]*),(?![^\"]*\"\\B)/).reduce((links, part) => {\n        const section = part.split(/(?!\\B\"[^\"]*);(?![^\"]*\"\\B)/);\n        if (section.length < 2) {\n            throw new Error(\"section could not be split on ';'\");\n        }\n        const url = section[0].replace(/<(.*)>/, '$1').trim();\n        const name = section[1].replace(/rel=\"(.*)\"/, '$1').trim();\n\n        links[name] = url;\n\n        return links;\n    }, {});\n}\n\nexport const getTimeStamp = (timestamp) => {\n    const SECOND = 1000,\n        MINUTE = SECOND * 60,\n        HOUR = MINUTE * 60,\n        DAY = HOUR * 24,\n        MONTH = DAY * 30,\n        YEAR = DAY * 365;\n\n    const timeelapsed = Date.now() - timestamp,\n        getElapsedString = (value, unit) => {\n            const round = Math.round(timeelapsed / value);\n            return `${round} ${unit}${round > 1\n                ? 's'\n                : ''} ago`;\n        };\n    if (timeelapsed < MINUTE) {\n        return getElapsedString(SECOND, 'second');\n    }\n    if (timeelapsed < HOUR) {\n        return getElapsedString(MINUTE, 'minute');\n    }\n    if (timeelapsed < DAY) {\n        return getElapsedString(HOUR, 'hour');\n    }\n    if (timeelapsed < MONTH) {\n        return getElapsedString(DAY, 'day');\n    }\n    if (timeelapsed < YEAR) {\n        return getElapsedString(MONTH, 'month');\n    }\n    return getElapsedString(YEAR, 'year');\n}\n","import React from 'react';\nimport * as helper from '../utils/helper';\n\nconst IssueDetails = ({ data }) => {\n  const createdAt = helper.getTimeStamp(new Date(data.created_at))\n  const user = data.user.login\n\n  let timeStamp = `#${data.number} opened ${createdAt} by ${user}`\n\n  return (\n    <React.Fragment>\n        {timeStamp}\n    </React.Fragment>\n)\n}\n\nexport default IssueDetails","import React from 'react';\n\n\nconst Labels = ({ labels }) => {\n    let labelMap = labels.map((label, index) => {\n      return <span key={index} style={{ backgroundColor: \"#\" + label.color }} className={\"label\"}>{label.name}</span>\n  })\n  return (\n      <React.Fragment>\n          {labelMap}\n      </React.Fragment>\n  )\n\n}\n\nexport default Labels;","import React from 'react';\nimport '../css/Issues.css';\nimport * as helper from '../utils/helper';\nimport { Col, Container, Row , ProgressBar} from 'react-bootstrap';\nimport IssueDetails from './IssueDetails';\nimport Labels from './Labels';\n\nconst headers = {\n    headers: {\n        Authorization: \"token e359ef605cbdf330a70659af7cbce43b2f3bce5c\",\n        Accept: \"application/vnd.github.v3+json,application/vnd.github.machine-man-preview+json\",\n    }\n};\n\nconst baseUrl = \"https://api.github.com/repos\"\n\n\n\nclass Issues extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            user: this.props.user,\n            repo: this.props.repo,\n            listFilter: { state: \"open\", choice: \"issues\" },\n            since: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(),\n            per_page: 40,\n            sort: \"created\",\n            page: '',\n            currentPageNumber: 1,\n            pages: {},\n            issues: [],\n            loading: true,\n            error: null,\n            showBody: {},\n        };\n        \n        this.getIssues = this.getIssues.bind(this);\n    }\n\n    componentDidMount() {\n        this.getIssues();\n    }\n\n    /**\n     * Fetch issues \n     */\n    getIssues() {\n        // 7 days ago from today \n        const since = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString()\n        \n        const params = helper.encodeQueryString({ state: this.state.listFilter.state, since: since, per_page: 40, sort: \"created\" })\n        \n        let linkHeaders = ''\n        \n        let userRepositoryIssues = `${this.props.user}/${this.props.repo}/issues`\n        let fullUrl = `${baseUrl}/${userRepositoryIssues}${params}${this.state.page}`\n\n        fetch(fullUrl, headers)\n            .then(response => {\n                if (response.headers.get('Link')) {\n                    linkHeaders = helper.parseLinkHeader(response.headers.get('Link'))\n                }\n                if (response.ok) return response.json();\n                throw new Error('Request failed.');\n            })\n            .then(data => {\n                // set our state with the response\n                this.setState({\n                    pages: linkHeaders,\n                    issues: data,\n                    loading: false,\n                    error: null,\n                    showBody: {},\n                });\n            })\n            .catch(error => {\n                this.setState({\n                    loading: false,\n                    error: error\n                });\n            });\n    }\n\n    // Render a loading bar during HTTP Request\n    renderLoading() {\n        return <ProgressBar animated now={100}/>;\n    }\n\n    // Render an error message\n    renderError() {\n        return (\n            <div>\n                Something is wrong: {this.state.error.message}\n            </div>\n        );\n    }\n\n    // Render issues\n    renderIssues() {\n        if (this.state.error) {\n            return this.renderError();\n        }\n\n        return (\n            < React.Fragment >\n                {\n                    this.state.issues.map(function (data, index) {\n                       return <div key={index}>\n                                <Container>\n                                    <span data-id={data.id} >\n                                        <Row>\n                                            <Col md={1}><i className=\"fa fa-exclamation-circle fa-3x\"></i></Col>\n                                            <Col md={11} className=\"issueDetails\"><span className=\"title\">{data.title}</span>\n                                                        <Labels labels={data.labels} />\n                                                        <br/>\n                                                        <span className=\"timestamp\">\n                                                            <IssueDetails data={data} />\n                                                        </span>\n                                            </Col>\n                                        </Row>\n                                </span>\n                                </Container>\n                                </div>\n\n                    })\n\n                }\n            \n            </React.Fragment>\n        );\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <nav className=\"panel\">\n                <span>Issues</span>\n                <hr></hr>\n                {this.state.loading ?\n                    this.renderLoading()\n                    : this.renderIssues()}\n                </nav>\n            </div>);\n    }\n   \n}\n\nexport default Issues;\n","import Issues from './components/Issues.js'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Issues  user=\"facebook\" repo=\"react\" />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}